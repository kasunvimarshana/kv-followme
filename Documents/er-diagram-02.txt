@startuml
' Entities
entity users {
  *id : bigint
  --
  +email : varchar
  password : varchar
  created_at : timestamp
  updated_at : timestamp
}

entity t_w_s {
  *id : bigint
  --
  created_user : varchar
  company_name : varchar
  department_name : varchar
  title : varchar
  description : text
  start_date : datetime
  due_date : datetime
  is_done : boolean
  resource_dir : text
}

entity t_w_infos {
  *id : bigint
  --
  description : text
  created_user : varchar
}

entity t_w_users {
  *id : bigint
  --
  is_done : boolean
}

entity meeting_categories {
  *id : bigint
  --
  name : varchar
}

entity statuses {
  *id : bigint
  --
  name : varchar
}

entity event_recurring_patterns {
  *id : bigint
  --
  minute : int
  hour : int
  day_of_month : int
  month : int
  day_of_week : int
  next_event_at : datetime
}

entity recurring_types {
  *id : bigint
  --
  name : varchar
}

entity user_roles {
  *id : bigint
  --
  role_pk : varchar
}

' Relationships
users ||--o{ user_roles : "has"
t_w_s }|--|| meeting_categories : "belongs to"
t_w_s }|--|| statuses : "has status"
t_w_s ||--o{ t_w_infos : "has details"
t_w_s ||--o{ t_w_users : "has participants"
t_w_s ||--o{ event_recurring_patterns : "has recurrence"
users ||--o{ t_w_s : "created tasks"
users ||--o{ t_w_s : "completed tasks"
t_w_users }o--|| users : "assigned to"
event_recurring_patterns }|--|| recurring_types : "uses pattern"

' Notes
note top of users
  **PK:** id
  **Unique:** email
  Core user entity with system-generated ID
  and natural key email
end note

note right of t_w_s
  **PK:** id
  **FKs:**
  - meeting_category_id
  - status_id
  - created_user (email)
  Core task entity with temporal tracking
  and recurrence capabilities
end note

note left of event_recurring_patterns
  Polymorphic recurrence configuration
  **Pattern:** (recurrable_type, recurrable_id)
  **Main relationship:** App\\TW â†’ t_w_s.id
  Implements cron-like scheduling patterns
end note
@enduml
